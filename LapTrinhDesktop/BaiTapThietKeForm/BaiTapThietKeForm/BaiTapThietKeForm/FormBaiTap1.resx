<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>